name: master-actions
run-name: RELEASE
on:
    push:
        branches:
            - "master"

jobs:
    tag-release:
        runs-on: ${{ env.UBUNTU_IMAGE }}
        steps:
            -   name: Release tag
                id: release
                uses: RedSockActions/release_tag@v1.1.6
                with:
                    token: ${{ github.token }}
        outputs:
            tag: ${{ steps.release.outputs.tag }}

    docker-registry-release:
        runs-on: ${{ env.UBUNTU_IMAGE }}
        needs:
            - tag-release
        if: ${{ needs.tag-release.outputs.tag != '' }}
        steps:
            -   name: Release image
                uses: RedSockActions/release_image@v1.0.19
                with:
                    REGISTRY_USER: ${{ vars.REGISTRY_USER }}
                    REGISTRY_PWD: ${{ secrets.REGISTRY_PWD }}

    npm-registry-release:
        runs-on: ${{ env.UBUNTU_IMAGE }}
        needs:
            - tag-release
        if: ${{ needs.tag-release.outputs.tag != '' }}
        steps:
            -   name: Checkout repository
                uses: actions/checkout@v3

            -   name: Set up Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: 20
                    registry-url: https://registry.npmjs.org/

            -   name: Install dependencies
                working-directory: pkg/web
                run: yarn install

            -   name: Build
                working-directory: pkg/web
                run: yarn build

            -   name: Publish to npm
                working-directory: pkg/web
                env:
                    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
                    VERSION: ${{ needs.tag-release.outputs.tag }}
                run: |
                    echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
                    export VERSION=$(echo "${VERSION}" | sed 's/^v//')
                    
                    jq --arg version "$VERSION" '.version = $version' package.json > temp && mv temp package.json
                    yarn publish --non-interactive --access public --tag latest
